{% import "macros/status.nunj" as status %}

{#
{% asyncEach item in frctl.docs %}
  {% asyncEach menuitem in item %}
    {% if menuitem.isIndex == true %}
      <li>
        <a href="{{ path('/') }}docs/{{ menuitem.path }}">{{ menuitem.title }}</a>
      </li>
    {% endif %}
  {% endeach %}
{% endeach %}
#}

<p>Here you'll find developer documentation on using patterns and creating new patterns for the Visual Framework.</p>

<ol class="vf-grid vf-grid__col-3">
  <li>Read <a href="https://github.com/visual-framework/vf-core">the basics of the Visual Framework</a>;</li>
  <li><a href="#boilerplate">Grab a boilerplate</a>;</li>
  <li>Browse <a href="#grids">the patterns</a> below;</li>
  <li>Learn <a href="docs/guidelines">how to create new patterns</a> or <a href="https://github.com/visual-framework/vf-core/issues/new?template=new-pattern-request.md">request a new pattern</a> for the global `vf-core`;</li>
  <li>Dive deep and <a href="https://github.com/visual-framework/vf-core#childtheme">make your own theme</a>; and</li>
  <li><a href="https://embl-vf.slack.com/messages">Ask the community for help</a> or <a href="http://github.com/visual-framework/vf-core/issues/">open an issue</a>.</li>
</ol>

{% include 'partials/browser/pattern-list.nunj' %}

{#
{{ frctl.components|dump(2)}}
{{ nav.tree(frctl.components, entity, request) }}
#}

{#

<h3>Component statuses</h3>
<p>Components and their variants have been given statuses reflecting their state of completion. The available statuses are listed below.</p>
<table>
<tr>
    <th>Label</th>
    <th>Description</th>
</tr>
{% for handle, st in frctl.get('components.statuses') %}
<tr>
    <td>{{ status.tag(st) }}</td>
    <td>{{ st.description }}</td>
</tr>
{% endfor %}
</table>
#}
